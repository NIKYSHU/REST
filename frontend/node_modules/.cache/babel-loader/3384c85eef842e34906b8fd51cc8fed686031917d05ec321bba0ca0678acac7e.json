{"ast":null,"code":"var _jsxFileName = \"/home/michael/python_work/project_rest_gb/frontend/src/App.js\";\nimport React from \"react\";\nimport './logo.svg';\nimport './App.css';\nimport UsersList from './components/Users.js';\nimport NotesList from './components/Todo.js';\nimport ProjectsList from \"./components/Projects.js\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport NotFound from \"./components/NotFound\";\nimport MenuItem from \"./components/Menu\";\nimport FooterItem from \"./components/Footer\";\nimport LoginForm from \"./components/Auth\";\n\n/* создаем класс (обьект, компонент) с состоянием (информация).\nТут будет храниться инфа и передаваться в др. компоненты */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'users': [],\n      'notes': [],\n      'projects': []\n    };\n  }\n\n  /* Делаем запросы на бек */\n\n  loadData() {\n    axios.get('http://127.0.0.1:8000/api/users/').then(response => {\n      const users = response.data;\n      this.setState({\n        'users': users.results\n      });\n    }).catch(error => console.log(error));\n    axios.get('http://127.0.0.1:8000/api/todo/').then(response => {\n      const notes = response.data;\n      this.setState({\n        'notes': notes.results\n      });\n    }).catch(error => console.log(error));\n    axios.get('http://127.0.0.1:8000/api/projects/').then(response => {\n      const projects = response.data;\n      this.setState({\n        'projects': projects.results\n      });\n    }).catch(error => console.log(error));\n  }\n\n  /* Этот код выполняется каждый раз, когда запускается сервер */\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  /* Эта функция создает и получает токен авторизации с бека */\n\n  getToken(username, password) {\n    axios.post('http://127.0.0.1:8000/api_token/', {\n      username: username,\n      password: password\n    }).then(response => {\n      console.log(response.data);\n    }).catch(error => alert('Неверный логин или пароль'));\n  }\n\n  /* Эта функция создает и возвращает верстку js */\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(UsersList, {\n              users: this.state.users\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todo\",\n            element: /*#__PURE__*/_jsxDEV(NotesList, {\n              notes: this.state.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/projects\",\n            element: /*#__PURE__*/_jsxDEV(ProjectsList, {\n              projects: this.state.projects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginForm, {\n              getToken: (username, password) => this.getToken(username, password)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FooterItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","UsersList","NotesList","ProjectsList","axios","BrowserRouter","Route","Routes","NotFound","MenuItem","FooterItem","LoginForm","App","Component","constructor","props","state","loadData","get","then","response","users","data","setState","results","catch","error","console","log","notes","projects","componentDidMount","getToken","username","password","post","alert","render"],"sources":["/home/michael/python_work/project_rest_gb/frontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport './logo.svg';\nimport './App.css';\nimport UsersList from './components/Users.js';\nimport NotesList from './components/Todo.js';\nimport ProjectsList from \"./components/Projects.js\";\nimport axios from \"axios\";\nimport {BrowserRouter, Route, Routes} from 'react-router-dom';\nimport NotFound from \"./components/NotFound\";\nimport MenuItem from \"./components/Menu\";\nimport FooterItem from \"./components/Footer\";\nimport LoginForm from \"./components/Auth\";\n\n/* создаем класс (обьект, компонент) с состоянием (информация).\nТут будет храниться инфа и передаваться в др. компоненты */\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'users': [],\n            'notes': [],\n            'projects': [],\n        }\n\n    }\n\n/* Делаем запросы на бек */\n\n    loadData() {\n        axios.get('http://127.0.0.1:8000/api/users/')\n            .then(response => {\n                const users = response.data\n                this.setState(\n                    {\n                        'users': users.results,\n                    }\n                )\n\n            }).catch(error => console.log(error))\n\n        axios.get('http://127.0.0.1:8000/api/todo/')\n            .then(response => {\n                const notes = response.data\n                this.setState(\n                    {\n                        'notes': notes.results,\n                    }\n                )\n\n            }).catch(error => console.log(error))\n\n        axios.get('http://127.0.0.1:8000/api/projects/')\n            .then(response => {\n                const projects = response.data\n                this.setState(\n                    {\n                        'projects': projects.results,\n                    }\n                )\n\n            }).catch(error => console.log(error))\n    }\n\n/* Этот код выполняется каждый раз, когда запускается сервер */\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n/* Эта функция создает и получает токен авторизации с бека */\n\n    getToken(username, password) {\n        axios.post('http://127.0.0.1:8000/api_token/', {username: username, password: password})\n            .then(response => {\n                console.log(response.data)\n            }).catch(error => alert('Неверный логин или пароль'))\n    }\n\n/* Эта функция создает и возвращает верстку js */\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <MenuItem/>\n                    <Routes>\n                        <Route path='/' element={<UsersList users={this.state.users}/>}/>\n                        <Route path='/todo' element={<NotesList notes={this.state.notes}/>}/>\n                        <Route path='/projects' element={<ProjectsList projects={this.state.projects}/>}/>\n                        <Route path='/login' element={<LoginForm\n                            getToken={(username, password) => this.getToken(username, password)}/>}/>\n                        <Route path='*' element={<NotFound/>}/>\n                    </Routes>\n                    <FooterItem/>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}